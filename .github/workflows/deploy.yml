name: Deploy

on:
  workflow_run:
    workflows: ["Checks"]
    branches: [master]
    types:
      - completed
env:
  NODE_ENV: production
  SLS_DEBUG: "*"
  TWITTER_SCREEN_NAME: this_vid
  EXTERNAL_URL: thisvid.space
  FIREBASE_PROJECT_ID: downloadthisvideo-662ae
  TWITTER_CALLBACK_URL: "https://thisvid.space/_/completetwittersignin"

  AD_CODE: ${{ secrets.AD_CODE }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GTAG_ID: ${{ secrets.GTAG_ID }}
  TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
  TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
  TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
  TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
  REDIS_HOSTNAME: ${{ secrets.REDIS_HOSTNAME }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    name: Deploy to prod
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.18.0
        uses: actions/setup-node@v2
        with:
          node-version: 14.18.0
      - run: npm ci --production=false
      - name: Deploy that shit
        run: |
          aws --version
          aws --region us-east-1 s3 cp \
            s3://shalvah-creds/downloadthisvideo-serviceaccount.json  \
            ./downloadthisvideo-serviceaccount.json && \
            aws --region us-east-1 s3 cp \
            s3://shalvah-creds/thisvid-analytics-serviceaccount.json  \
            ./thisvid-analytics-serviceaccount.json && \
            npx serverless deploy